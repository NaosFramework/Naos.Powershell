<Project ToolsVersion="4.0" TreatAsLocalProperty="SourceRootPath;BuildRootPath" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This file is installed on local machines
       Only modify or add what is absolutely necessary to avoid having repeated local installs
  -->

  <PropertyGroup>
    <!-- If this file changes force a rebuild -->
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    <!-- To avoid circular imports, importers can use Condition="'$(BuildHookImported)' != 'true'" -->
    <BuildHookImported>true</BuildHookImported>
  </PropertyGroup>

  <!-- Locate and import Build.proj so it can be imported to obtain common property settings and find paths to other build files -->
  <PropertyGroup>
    <_SourceRootPath>$([MSBuild]::GetDirectoryNameOfFileAbove($(MSBuildProjectDirectory), Build.proj))\</_SourceRootPath>
    <_BuildProjectFilePath>$(_SourceRootPath)Build.proj</_BuildProjectFilePath>

    <!-- Tell Build.proj to not import Main.Build.targets because it shouldn't override default build targets -->
    <MainBuildImported>true</MainBuildImported>
  </PropertyGroup>

  <Import Project="$(_BuildProjectFilePath)" Condition="Exists('$(_BuildProjectFilePath)') and '$(BuildProjImported)' != 'true'" />

  <!-- Define minimal set of common paths available everywhere in build
       Following the normal MSBuild convention such that all paths end with '\'
       MSBuild by default will allow overriding these values by adding a switch like /p:BuildPackageRootPath="<somepath>"
       Paths duplicated in Build.proj, but not strictly required there if the location of build files can be ascertained otherwise
  -->
  <PropertyGroup>
    <!-- In case Build.proj doesn't define something -->
    <BuildProjImported>true</BuildProjImported>
    <SourceRootPath Condition="'$(SourceRootPath)' == ''">$(_SourceRootPath)</SourceRootPath>
    <SourceRootPath Condition="!HasTrailingSlash('$(SourceRootPath)')">$(SourceRootPath)\</SourceRootPath>
    <BuildRootPath Condition="'$(BuildRootPath)' == ''">$(SourceRootPath).build\</BuildRootPath>
    <BuildRootPath Condition="!HasTrailingSlash('$(BuildRootPath)')">$(BuildRootPath)\</BuildRootPath>
  </PropertyGroup>

  <PropertyGroup>
    <!-- In case Build.proj doesn't define any of these values -->
    <BuildProjImported>true</BuildProjImported>
  </PropertyGroup>

  <PropertyGroup>
    <CustomAfterMicrosoftCommonTargets>$(BuildRootPath)After.Microsoft.Common.targets</CustomAfterMicrosoftCommonTargets>
  </PropertyGroup>

  <Target Name="InstallBuildHook">
    <Copy SourceFiles="$(MSBuildThisFile)" DestinationFolder="$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.targets\ImportBefore" />
  </Target>

  <Target Name="UninstallBuildHook">
    <Delete Files="$(MSBuildUserExtensionsPath)\$(MSBuildToolsVersion)\Microsoft.Common.targets\ImportBefore\$(MSBuildThisFile)" TreatErrorsAsWarnings="False" />
  </Target>
</Project>
