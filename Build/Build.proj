<Project ToolsVersion="4.0" DefaultTargets="Build" TreatAsLocalProperty="SourceRootPath;BuildRootPath" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!-- If this file changes force a rebuild -->
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
    <!-- To avoid circular imports, importers can use Condition="'$(BuildProjImported)' != 'true'" -->
    <BuildProjImported>true</BuildProjImported>
  </PropertyGroup>

  <!-- This file is a placeholder so the Visual Studio build hooks can find the build (the file name is significant).
       It also can be used to trigger a command line build with behavior very close to Visual Studio
       It must live somewhere up the tree (towards the root) from .csproj files
       All other build files can live anywhere if /p:BuildRootPath=<somepath> is supplied to msbuild
       Otherwise the build files are assumed to be locatable in .\.build\* -->

  <!-- Define minimal set of common paths available everywhere in build
       Following the normal MSBuild convention such that all paths end with '\'
       MSBuild by default will allow overriding these values by adding a switch like /p:BuildPackageRootPath="<somepath>"
       Duplicated in BuildHook.targets, but included here to resolve $(BuildRootPath) so targets can be located
  -->
  <PropertyGroup>
    <SourceRootPath Condition="'$(SourceRootPath)' == ''">$(MsBuildThisFileDirectory)</SourceRootPath>
    <SourceRootPath Condition="!HasTrailingSlash('$(SourceRootPath)')">$(SourceRootPath)\</SourceRootPath>
    <BuildRootPath Condition="'$(BuildRootPath)' == ''">$(SourceRootPath).build\</BuildRootPath>
    <BuildRootPath Condition="!HasTrailingSlash('$(BuildRootPath)')">$(BuildRootPath)\</BuildRootPath>

    <StyleCopImportsTargetsFilePath Condition="'$(StyleCopImportsTargetsFilePath)' == ''">..\packages\StyleCop.MSBuild.4.7.49.0\build\StyleCop.MSBuild.Targets</StyleCopImportsTargetsFilePath>
  </PropertyGroup>

  <!-- Default is to build all C# projects in the tree, this can be customized if appropriate. -->
  <ItemGroup>
    <Projects Include="$(SourceRootPath)**\*.csproj" />
  </ItemGroup>

  <!-- Do not change this line, it pulls in the build system -->
  <Import Project="$(BuildRootPath)MainBuild.targets" Condition="'$(MainBuildImported)' != 'true'" />

  <!-- Provides two targets: InstallBuildHook and UninstallBuildHook
       It is safe to delete this line if these targets are unwanted
       Installation will only occur if these targets are called. -->
  <Import Project="$(BuildRootPath)BuildHook.targets" Condition="'$(BuildHookImported)' != 'true'" />
</Project>
